// notification.js
const TOKEN = import.meta.env.VITE_TOKEN;
const CHANNEL_ID = import.meta.env.VITE_CHANNEL_ID;
const SHEET_ID = import.meta.env.VITE_SHEET_ID;
const SHEET_RANGE = import.meta.env.VITE_SHEET_RANGE;
const API_KEY = import.meta.env.VITE_GOOGLE_API_KEY; // –Ω—É–∂–µ–Ω –ø—É–±–ª–∏—á–Ω—ã–π API key

// =============== Google Sheets ===============
async function getSheetData() {
  const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(
    SHEET_RANGE
  )}?key=${API_KEY}`;

  const res = await fetch(url);
  if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Google Sheets");
  const data = await res.json();
  return data.values; // –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫
}

// =============== Telegram ===============
async function sendTelegramMessage(text) {
  const url = `https://api.telegram.org/bot${TOKEN}/sendMessage`;
  const res = await fetch(url, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: CHANNEL_ID, text, parse_mode: "HTML" }),
  });

  if (!res.ok) {
    const err = await res.text();
    console.error("–û—à–∏–±–∫–∞ Telegram:", err);
    throw new Error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è");
  }
}

// =============== –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ ===============
export async function notifyFromSheet() {
  try {
    const rows = await getSheetData();

    // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ ‚Äî –∑–∞–≥–æ–ª–æ–≤–∫–∏, –ø–æ—ç—Ç–æ–º—É –Ω–∞—á–∏–Ω–∞–µ–º —Å –∏–Ω–¥–µ–∫—Å–∞ 1
    for (let i = 1; i < rows.length; i++) {
      const [date, event, message, ticket, marker] = rows[i];

      // marker === "TRUE" / "‚òëÔ∏è" / –ø—É—Å—Ç–æ (–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞)
      if (!marker) {
        const text =
          `üìÖ <b>${date || ""}</b>\n` +
          `üìå ${event || ""}\n` +
          `üí¨ ${message || ""}\n` +
          (ticket ? `üîó <a href="${ticket}">–°—Å—ã–ª–∫–∞</a>` : "");

        await sendTelegramMessage(text);
      }
    }

    alert("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!");
  } catch (err) {
    console.error(err);
    alert("–û—à–∏–±–∫–∞: " + err.message);
  }
}
